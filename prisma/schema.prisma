generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum SlotStatus {
  AVAILABLE
  LIMITED_TIME
  UNAVAILABLE
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reservations Reservation[]
}

model Location {
  id        String   @id @default(uuid())
  name      String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  slots     Slot[]
}

model Slot {
  id         String     @id @default(uuid())
  identifier String     // e.g. "A1", "B2"
  status     SlotStatus @default(AVAILABLE)
  location   Location   @relation(fields: [locationId], references: [id])
  locationId String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  @@unique([identifier, locationId]) // composite unique constraint

  reservations Reservation[]

}

model Reservation {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  slot      Slot     @relation(fields: [slotId], references: [id])
  slotId    String
  startTime DateTime
  endTime   DateTime
  canceled  Boolean  @default(false)
  createdAt DateTime @default(now())
}
